clear
clc
close all

disp('Лабораторна робота #5')
disp('КОРЕЛЯЦІЙНИЙ АНАЛІЗ БІОСИГНАЛІВ')
disp('Виконав:  , група ... ННІІДС')

%=== Завдання #1.1 ===
% Моделювання стаціонарного випадкового процесу
fs = 20;
f0 = 5 ;
A = 0.5;
D = 0.25; 
n = 512; 
p=3.1416;
t = [0:0.02:5];		% вектор часу
h=t*2*p*f0;
s =sin(h);
v = D*randn(1,length(t));  
x=s+v;  
% Графіки отриманих сигналів
figure(1)
subplot (3, 1, 1); plot(t, v), grid on;
title ('Сигнал x(t)');
ylabel('Амплітуда');
xlabel('Відліки');
subplot (3, 1, 2); plot (t, s); grid on;
title ('Сигнал s(t)');
ylabel('Амплітуда');
xlabel('Відліки');
subplot (3, 1, 3); plot (t, x); grid on;
title ('Сигнал y(t)');
ylabel('Амплітуда');
xlabel('Відліки');
%=== Завдання #1.2 ===
% Обчислення оцінки дисперсії шуму, дисперсії сигналу та відношення шум/сигнал
disp(var(v))
disp(var(x))
l=snr(s,v)
%=== Завдання #1.3 ===
% Обчислення незміщеної оцінки АКФ змодельованого процесу
t1=-5:0.02:5;
maxlag1=1;
maxlag2=2;
maxlag3=3;
ran = xcorr(x,x,'unbiased');
rlag12=xcorr(x,x,maxlag1, 'unbiased');
rlag13=xcorr(x,x,maxlag2, 'unbiased');
rlag14=xcorr(x,x,maxlag3, 'unbiased');
figure(2)
subplot (3, 1, 1); plot (rlag12); grid on;
subplot (3, 1, 2); plot (rlag13); grid on;
subplot (3, 1, 3); plot (rlag14); grid on;
figure(3)
rlag15=xcorr(x,x,maxlag1+6, 'biased');
rlag16=xcorr(x,x,maxlag2+6, 'biased');
rlag17=xcorr(x,x,maxlag3+6, 'biased');
subplot (3, 1, 1); plot (rlag15); grid on;
subplot (3, 1, 2); plot (rlag16); grid on;
subplot (3, 1, 3); plot (rlag17); grid on;

fs = 202;
f0 = 5 ;
A = 0.5;
D = 0.25; 
n = 512; 
p=3.1416
t = [0:0.02:5];		% вектор часу
h=t*2*p*f0;
s =sin(h);
v = D*randn(1,length(t));  
x=s+v;  
% Графіки отриманих сигналів
figure(4)
subplot (3, 1, 1); plot(t, v), grid on;
title ('Сигнал x(t)');
ylabel('Амплітуда');
xlabel('Відліки');
subplot (3, 1, 2); plot (t, s); grid on;
title ('Сигнал s(t)');
ylabel('Амплітуда');
xlabel('Відліки');
subplot (3, 1, 3); plot (t, x); grid on;
title ('Сигнал y(t)');
ylabel('Амплітуда');
xlabel('Відліки');
%=== Завдання #1.2 ===

maxlag1=fix(0.2*length(x));
maxlag2=100;
maxlag3=3;
ran = xcorr(x,x,'unbiased');
rlag12=xcorr(x,x,maxlag1, 'unbiased');
rlag13=xcorr(x,x,maxlag2, 'unbiased');
rlag14=xcorr(x,x,maxlag3, 'unbiased');
figure(5)
subplot (3, 1, 1); plot (rlag12); grid on;
subplot (3, 1, 2); plot (rlag13); grid on;
subplot (3, 1, 3); plot (rlag14); grid on;
max(rlag15);
figure(6)
rlag15=xcorr(x,x,maxlag1+6, 'biased');
rlag16=xcorr(x,x,maxlag2+6, 'biased');
rlag17=xcorr(x,x,maxlag3+6, 'biased');
subplot (3, 1, 1); plot (rlag15); grid on;
subplot (3, 1, 2); plot (rlag16); grid on;
subplot (3, 1, 3); plot (rlag17); grid on;

%=== Завдання #2.1 ===
% Завантаження сигналу ЕЕГ файл (eeg1-p4.dat)
fs =100; 
eeg1_p4 =load('eeg1-p4.dat'); % сигнал EEU
eeg1 = detrend(eeg1_p4);
figure(7)   
plot(eeg1);
%=== Завдання #2.2 ===
% Виділення епохи сигналу ЕЕГ від t1 = 4,7 с до t2 = 5,8 с
fs=100;
t1 =4.7; 
t2 =5.8;
t = (0:length(eeg1_p4)-1)/fs;
n1 = (t1*fs) + 1; 
n2 = (t2*fs) + 1;
figure(8)
plot(t(n1:n2),eeg1_p4(n1:n2));
%=== Завдання #2.3 ===
% Обчислення незміщеної оцінки АКФ сигналу ЕЕГ
maxlag3 =fix(0.9*length(eeg1_p4))
akf = xcorr(eeg1_p4,eeg1_p4, maxlag3, 'unbiased');
figure(8)
plot(akf);
max(akf);
%=== Завдання #2.4 ===
% Обчислення спектральної щільності сигналу
Sxx = abs(fft(eeg1_p4))/length(eeg1_p4);
N = length(eeg1_p4);
f = (0:N-1)/N*fs;
figure(9)
plot(f,Sxx), grid on;
%=== Завдання #2.5 ===
% Завантаження сигналу ЕЕГ файл (eeg1-f3.dat)
fs = 100;
eeg1_f3 = load('eeg1-f3.dat');
eeg1_f3 = detrend(eeg1_f3);
t = (0:length(eeg1_f3)-1)/fs;
figure(10)
plot(t,eeg1_f3)
 
% Виділення епохи сигналу ЕЕГ від t1 = 4,2 с до t2 = 4,96 с
fs=100;
t1 =4.2; 
t2 =4.96;
t = (0:length(eeg1_f3)-1)/fs;
n1 = (t1*fs) + 1; 
n2 = (t2*fs) + 1;
figure(11)
plot(t(n1:n2),eeg1_f3(n1:n2));

% Обчислення незміщеної оцінки АКФ сигналу ЕЕГ
maxlag4 =20
akf2 = xcorr(eeg1_f3,eeg1_f3, maxlag4, 'unbiased');
figure(12)
plot(akf2);
max(akf2);

% Обчислення спектральної щільності сигналу
Sxx1 = abs(fft(eeg1_f3))/length(eeg1_f3);
N2 = length(eeg1_f3);
f = (0:N2-1)/N2*fs;
figure(13)
plot(f,Sxx1), grid on;

%=== Завдання #3.1 ===
% Завантаження сигналу ЕЕГ файл (eeg1-o2.dat)
fs = 100;
eeg1_o2 = load('eeg1-o2.dat');
eeg1_o2 = detrend(eeg1_o2);
t = (0:length(eeg1_o2)-1)/fs;
figure(14)
plot(t,eeg1_o2);

% Завантаження сигналу ЕЕГ файл (eeg1-c3.dat)
fs = 100;
eeg1_c3 = load('eeg1-c3.dat');
eeg1_c3 = detrend(eeg1_c3);
t = (0:length(eeg1_c3)-1)/fs;
figure(15)
plot(t,eeg1_c3);

%=== Завдання #3.2 ===
% Виділення епохи сигналів ЕЕГ від t1 = 5,71 с до t2 = 6,78 с

fs=100;
t1 =5.71; 
t2 =6.78;
t11 = (0:length(eeg1_o2)-1)/fs;
t22 = (0:length(eeg1_c3)-1)/fs;
n1 = (t1*fs) + 1; 
n2 = (t2*fs) + 1;
figure(16)
subplot (2, 1, 1); plot(t11(n1:n2),eeg1_o2(n1:n2));
subplot (2, 1, 2); plot(t22(n1:n2),eeg1_c3(n1:n2));

%=== Завдання #3.3 ===
% Обчислення ВКФ сигналів ЕЕГ
maxlag1=1;
vkf = xcorr(eeg1_o2,eeg1_c3,'biased');
figure(17)
plot(vkf);

%=== Завдання #3.4 ===
% Обчислення взаємної спектральної щільності сигналів ЕЕГ
Sxx = abs(fft(eeg1_o2,eeg1_c3))/length(eeg1_o2,eeg_c3);
N = length(eeg1_o2,eeg1_c3);
f = (0:N-1)/N*fs;
figure(9)
plot(f,Sxx), grid on;

